#!/usr/bin/env python

import uuid, os, sys
import ConfigParser

sys.path.append(os.path.dirname(os.getcwd()))
from pssolib.types import *
from pssolib.utils import *

# Parse arguments and create a config 
if len(sys.argv) != 3:
    print "Usage: {0} <host:port> <keyspace>".format(sys.argv[0])
    sys.exit(1)        
parser = ConfigParser.ConfigParser()
parser.add_section("main")
parser.set("main","servers",sys.argv[1])
parser.set("main","keyspace",sys.argv[2])
Config.create(parser,True)

# Run some tests
id1=uuid.UUID("de33e26e-8f56-13e2-9bbe-606720d66784")
id2=uuid.uuid4()

# s = Splitter(id1)
# print s.split()
# print s.split()

# ac = WeakAdoptCommit(id1)
# print ac.adoptCommit("hello")

# c = Consensus(id1)
# print c.propose("bonjour")

# cas = Cas(id2,"")
# print cas.compareandswap("","hello")
# print cas.compareandswap("","Goodbye")
# print cas.compareandswap("Goodbye","Goodbye2")

# spin = Spinlock(id1)
# spin.lock()
# print "LOCKED"
# spin.unlock()
# print "UNLOCKED"

stack = Stack(id2)
assert stack.empty() == True
while True:
    stack.push("test1")
    stack.push("test2")
    stack.push("test3")
    stack.push("test4")
    print stack.pop()+" < "+stack.pop()+" < "+stack.pop()+" < "+stack.pop()

